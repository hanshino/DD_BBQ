version: "3.8"
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "1k"
    max-file: "3"

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "${APP_PORT}:80"
    networks:
      - server_network
    depends_on:
      - web_dev
      - backend
    volumes:
      - ./docker/config/nginx-dev.conf:/etc/nginx/conf.d/default.conf

  web_dev:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    networks:
      - server_network
    volumes:
      - ./web:/app
      - exclude_web:/app/node_modules
    logging: *default-logging

  backend:
    build:
      context: "./backend"
      dockerfile: "Dockerfile"
    logging: *default-logging
    links:
      - mysql
    volumes:
      - ./:/var/www/html
    command: ["yarn", "dev"]

  mongo:
    image: mongo
    restart: always
    networks:
      - server_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"

  mongo-express:
    image: mongo-express
    restart: always
    networks:
      - server_network
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"

  redis:
    image: redis:alpine
    command: "redis-server --requirepass ${REDIS_PASSWORD}"
    networks:
      - server_network
    restart: always
    logging: *default-logging

volumes:
  exclude_web:
  exclude_backend:

networks:
  server_network:
    external: false
